//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace Database
{
	/// <summary>
	/// Database       : website
	/// Data Source    : 145.239.90.140
	/// Server Version : 5.5.5-10.3.31-MariaDB-0ubuntu0.20.04.1
	/// </summary>
	public partial class WebSiteBD : LinqToDB.Data.DataConnection
	{
		public ITable<Payments>           Payments          { get { return this.GetTable<Payments>(); } }
		public ITable<VerifyConfirms>     VerifyConfirm     { get { return this.GetTable<VerifyConfirms>(); } }
		public ITable<VerifyConfirmTests> VerifyConfirmTest { get { return this.GetTable<VerifyConfirmTests>(); } }

		public WebSiteBD()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public WebSiteBD(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public WebSiteBD(LinqToDbConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("payments")]
	public partial class Payments
	{
		[Column("id"),           PrimaryKey,  Identity] public int       Id           { get; set; } // int(10)
		[Column("unitpayId"),    NotNull              ] public string    UnitpayId    { get; set; } // varchar(255)
		[Column("account"),      NotNull              ] public string    Account      { get; set; } // varchar(255)
		[Column("sum"),          NotNull              ] public float     Sum          { get; set; } // float
		[Column("itemsCount"),   NotNull              ] public int       ItemsCount   { get; set; } // int(11)
		[Column("dateCreate"),   NotNull              ] public DateTime  DateCreate   { get; set; } // datetime
		[Column("dateComplete"),    Nullable          ] public DateTime? DateComplete { get; set; } // datetime
		[Column("status"),       NotNull              ] public sbyte     Status       { get; set; } // tinyint(4)
		[Column("isComplete"),   NotNull              ] public sbyte     IsComplete   { get; set; } // tinyint(4)
	}

	[Table("verifyConfirm")]
	public partial class VerifyConfirms
	{
		[Column("hash"),       PrimaryKey, NotNull] public string   Hash       { get; set; } // varchar(64)
		[Column("email"),                  NotNull] public string   Email      { get; set; } // varchar(128)
		[Column("socialclub"),             NotNull] public string   Socialclub { get; set; } // varchar(50)
		[Column("data"),                   NotNull] public DateTime Data       { get; set; } // datetime
		[Column("serverId"),               NotNull] public sbyte    ServerId   { get; set; } // tinyint(2)
		[Column("type"),                   NotNull] public sbyte    Type       { get; set; } // tinyint(2)
	}

	[Table("verifyConfirmTest")]
	public partial class VerifyConfirmTests
	{
		[Column("hash"),       PrimaryKey, NotNull] public string   Hash       { get; set; } // varchar(64)
		[Column("email"),                  NotNull] public string   Email      { get; set; } // varchar(128)
		[Column("socialclub"),             NotNull] public string   Socialclub { get; set; } // varchar(50)
		[Column("data"),                   NotNull] public DateTime Data       { get; set; } // datetime
		[Column("serverId"),               NotNull] public sbyte    ServerId   { get; set; } // tinyint(2)
	}

	public static partial class TableExtensions
	{
		public static Payments Find(this ITable<Payments> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static VerifyConfirms Find(this ITable<VerifyConfirms> table, string Hash)
		{
			return table.FirstOrDefault(t =>
				t.Hash == Hash);
		}

		public static VerifyConfirmTests Find(this ITable<VerifyConfirmTests> table, string Hash)
		{
			return table.FirstOrDefault(t =>
				t.Hash == Hash);
		}
	}
}

#pragma warning restore 1591
